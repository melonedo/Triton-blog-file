// Next run Pass --triton-rewrite-tensor-descriptor-to-pointer
// IR Dump After TritonRewriteTensorPointer ('builtin.module' operation)
// Current Run Pass --triton-rewrite-tensor-pointer

#loc = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0)
module {
  tt.func public @matrix_multiplication_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0)) attributes {noinline = false} {
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<64x64xbf16> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128x64xbf16> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.muli %1, %c128_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc5)
    %4 = tt.splat %2 : i32 -> tensor<128xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128xi32> loc(#loc6)
    %6 = arith.muli %0, %c64_i32 : i32 loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.splat %6 : i32 -> tensor<64xi32> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<64xi32> loc(#loc9)
    %10 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc10)
    %11 = tt.expand_dims %5 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc11)
    %12 = tt.splat %arg6 : i32 -> tensor<128x1xi32> loc(#loc12)
    %13 = arith.muli %11, %12 : tensor<128x1xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc13)
    %16 = tt.expand_dims %10 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc14)
    %17 = tt.broadcast %15 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc15)
    %18 = tt.broadcast %16 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc15)
    %19 = tt.addptr %17, %18 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc15)
    %20 = tt.expand_dims %10 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc16)
    %21 = tt.splat %arg7 : i32 -> tensor<64x1xi32> loc(#loc17)
    %22 = arith.muli %20, %21 : tensor<64x1xi32> loc(#loc17)
    %23 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc18)
    %24 = tt.addptr %23, %22 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc18)
    %25 = tt.expand_dims %9 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc19)
    %26 = tt.broadcast %24 : tensor<64x1x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc20)
    %27 = tt.broadcast %25 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc20)
    %28 = tt.addptr %26, %27 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc20)
    %29 = arith.addi %arg5, %c63_i32 : i32 loc(#loc59)
    %30 = arith.divsi %29, %c64_i32 : i32 loc(#loc60)
    %31 = scf.for %arg9 = %c0_i32 to %30 step %c1_i32 iter_args(%arg10 = %cst_1) -> (tensor<128x64xf32>)  : i32 {
      %58 = arith.muli %arg9, %c64_i32 : i32 loc(#loc25)
      %59 = arith.subi %arg5, %58 : i32 loc(#loc26)
      %60 = tt.expand_dims %10 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc27)
      %61 = tt.splat %59 : i32 -> tensor<1x64xi32> loc(#loc28)
      %62 = arith.cmpi slt, %60, %61 : tensor<1x64xi32> loc(#loc28)
      %63 = arith.muli %arg9, %c64_i32 : i32 loc(#loc29)
      %64 = tt.splat %63 : i32 -> tensor<128x64xi32> loc(#loc30)
      %65 = tt.addptr %19, %64 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc30)
      %66 = tt.broadcast %62 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc31)
      %67 = tt.load %65, %66, %cst_0 : tensor<128x64x!tt.ptr<bf16>> loc(#loc31)
      %68 = tt.expand_dims %10 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc32)
      %69 = tt.splat %59 : i32 -> tensor<64x1xi32> loc(#loc33)
      %70 = arith.cmpi slt, %68, %69 : tensor<64x1xi32> loc(#loc33)
      %71 = arith.muli %arg9, %c64_i32 : i32 loc(#loc34)
      %72 = arith.muli %71, %arg7 : i32 loc(#loc35)
      %73 = tt.splat %72 : i32 -> tensor<64x64xi32> loc(#loc36)
      %74 = tt.addptr %28, %73 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc36)
      %75 = tt.broadcast %70 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc37)
      %76 = tt.load %74, %75, %cst : tensor<64x64x!tt.ptr<bf16>> loc(#loc37)
      %77 = tt.dot %67, %76, %cst_1, inputPrecision = tf32 : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc38)
      %78 = arith.addf %arg10, %77 : tensor<128x64xf32> loc(#loc39)
      scf.yield %78 : tensor<128x64xf32> loc(#loc40)
    } loc(#loc24)
    %32 = tt.expand_dims %5 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc41)
    %33 = tt.splat %arg8 : i32 -> tensor<128x1xi32> loc(#loc42)
    %34 = arith.muli %32, %33 : tensor<128x1xi32> loc(#loc42)
    %35 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc43)
    %36 = tt.addptr %35, %34 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc43)
    %37 = tt.expand_dims %9 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc44)
    %38 = tt.broadcast %36 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x64x!tt.ptr<f32>> loc(#loc45)
    %39 = tt.broadcast %37 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc45)
    %40 = tt.addptr %38, %39 : tensor<128x64x!tt.ptr<f32>>, tensor<128x64xi32> loc(#loc45)
    %41 = arith.muli %1, %c128_i32 : i32 loc(#loc46)
    %42 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc47)
    %43 = tt.splat %41 : i32 -> tensor<128xi32> loc(#loc48)
    %44 = arith.addi %43, %42 : tensor<128xi32> loc(#loc48)
    %45 = arith.muli %0, %c64_i32 : i32 loc(#loc49)
    %46 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc50)
    %47 = tt.splat %45 : i32 -> tensor<64xi32> loc(#loc51)
    %48 = arith.addi %47, %46 : tensor<64xi32> loc(#loc51)
    %49 = tt.expand_dims %44 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc52)
    %50 = tt.splat %arg3 : i32 -> tensor<128x1xi32> loc(#loc53)
    %51 = arith.cmpi slt, %49, %50 : tensor<128x1xi32> loc(#loc53)
    %52 = tt.expand_dims %48 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc54)
    %53 = tt.splat %arg4 : i32 -> tensor<1x64xi32> loc(#loc55)
    %54 = arith.cmpi slt, %52, %53 : tensor<1x64xi32> loc(#loc55)
    %55 = tt.broadcast %51 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc56)
    %56 = tt.broadcast %54 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc56)
    %57 = arith.andi %55, %56 : tensor<128x64xi1> loc(#loc56)
    tt.store %40, %31, %57 : tensor<128x64x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":18:26)
#loc3 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":19:26)
#loc4 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":21:21)
#loc5 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":21:49)
#loc6 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":21:36)
#loc7 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":22:21)
#loc8 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":22:49)
#loc9 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":22:36)
#loc10 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":23:26)
#loc11 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":26:28)
#loc12 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":26:39)
#loc13 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":26:21)
#loc14 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":26:58)
#loc15 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":26:51)
#loc16 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":27:28)
#loc17 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":27:39)
#loc18 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":27:21)
#loc19 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":27:58)
#loc20 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":27:51)
#loc21 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:22)
#loc22 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":32:33)
#loc23 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:28)
#loc24 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":32:22)
#loc25 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":33:26)
#loc26 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":33:22)
#loc27 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":35:71)
#loc28 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":35:82)
#loc29 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":35:33)
#loc30 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":35:29)
#loc31 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":35:20)
#loc32 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:71)
#loc33 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:82)
#loc34 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:33)
#loc35 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:48)
#loc36 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:29)
#loc37 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":36:20)
#loc38 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":38:33)
#loc39 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":38:23)
#loc40 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":38:8)
#loc41 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":41:28)
#loc42 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":41:39)
#loc43 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":41:21)
#loc44 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":41:58)
#loc45 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":41:51)
#loc46 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":42:22)
#loc47 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":42:50)
#loc48 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":42:37)
#loc49 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":43:22)
#loc50 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":43:50)
#loc51 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":43:37)
#loc52 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":44:22)
#loc53 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":44:33)
#loc54 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":44:47)
#loc55 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":44:58)
#loc56 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":44:39)
#loc57 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":45:21)
#loc58 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":45:4)
#loc59 = loc(callsite(#loc21 at #loc22))
#loc60 = loc(callsite(#loc23 at #loc22))
