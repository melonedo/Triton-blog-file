--- matmul/with_dot_bf16/MLIR/02-Inliner.mlir
+++ matmul/with_dot_bf16/MLIR/03-Canonicalizer.mlir
@@ -1,6 +1,6 @@
 
 #loc = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0)
-#loc65 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":31:0)
+#loc64 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":31:0)
 module {
   tt.func public @matrix_multiplication_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":6:0)) attributes {noinline = false} {
     %0 = tt.get_program_id x : i32 loc(#loc1)
@@ -311,44 +311,40 @@
     tt.return loc(#loc60)
   } loc(#loc)
   tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_128__(0, 1)cconstexpr_64__(1,)cconstexpr_fp32_"() -> tensor<128x64xf32> attributes {noinline = false} {
-    %cst = arith.constant 0.000000e+00 : f32 loc(#loc62)
-    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc62)
-    tt.return %cst_0 : tensor<128x64xf32> loc(#loc63)
-  ^bb1:  // no predecessors
-    %0 = ub.poison : tensor<128x64xf32> loc(#loc64)
-    tt.return %0 : tensor<128x64xf32> loc(#loc64)
+    %cst = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc62)
+    tt.return %cst : tensor<128x64xf32> loc(#loc63)
   } loc(#loc61)
   tt.func private @"triton.language.standard.cdiv__i32__(1,)cconstexpr_64_"(%arg0: i32 loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":31:0)) -> i32 attributes {noinline = false} {
-    %c64_i32 = arith.constant 64 : i32 loc(#loc66)
-    %c64_i32_0 = arith.constant 64 : i32 loc(#loc66)
-    %0 = arith.extsi %arg0 : i32 to i64 loc(#loc66)
-    %1 = arith.extsi %c64_i32_0 : i32 to i64 loc(#loc66)
-    %2 = arith.addi %0, %1 : i64 loc(#loc66)
-    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc66)
-    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc66)
-    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc66)
-    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc66)
-    %5 = arith.andi %3, %4 : i1 loc(#loc66)
-    %6 = arith.addi %arg0, %c64_i32_0 : i32 loc(#loc66)
-    %c1_i32 = arith.constant 1 : i32 loc(#loc67)
-    %c1_i32_1 = arith.constant 1 : i32 loc(#loc67)
-    %7 = arith.extsi %6 : i32 to i64 loc(#loc67)
-    %8 = arith.extsi %c1_i32_1 : i32 to i64 loc(#loc67)
-    %9 = arith.subi %7, %8 : i64 loc(#loc67)
-    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc67)
-    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc67)
-    %10 = arith.cmpi sle, %9, %c2147483647_i64_2 : i64 loc(#loc67)
-    %11 = arith.cmpi sge, %9, %c-2147483648_i64_3 : i64 loc(#loc67)
-    %12 = arith.andi %10, %11 : i1 loc(#loc67)
-    %13 = arith.subi %6, %c1_i32_1 : i32 loc(#loc67)
-    %c64_i32_4 = arith.constant 64 : i32 loc(#loc68)
-    %c64_i32_5 = arith.constant 64 : i32 loc(#loc68)
-    %14 = arith.divsi %13, %c64_i32_5 : i32 loc(#loc68)
-    tt.return %14 : i32 loc(#loc69)
+    %c64_i32 = arith.constant 64 : i32 loc(#loc65)
+    %c64_i32_0 = arith.constant 64 : i32 loc(#loc65)
+    %0 = arith.extsi %arg0 : i32 to i64 loc(#loc65)
+    %1 = arith.extsi %c64_i32_0 : i32 to i64 loc(#loc65)
+    %2 = arith.addi %0, %1 : i64 loc(#loc65)
+    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc65)
+    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc65)
+    %3 = arith.cmpi sle, %2, %c2147483647_i64 : i64 loc(#loc65)
+    %4 = arith.cmpi sge, %2, %c-2147483648_i64 : i64 loc(#loc65)
+    %5 = arith.andi %3, %4 : i1 loc(#loc65)
+    %6 = arith.addi %arg0, %c64_i32_0 : i32 loc(#loc65)
+    %c1_i32 = arith.constant 1 : i32 loc(#loc66)
+    %c1_i32_1 = arith.constant 1 : i32 loc(#loc66)
+    %7 = arith.extsi %6 : i32 to i64 loc(#loc66)
+    %8 = arith.extsi %c1_i32_1 : i32 to i64 loc(#loc66)
+    %9 = arith.subi %7, %8 : i64 loc(#loc66)
+    %c2147483647_i64_2 = arith.constant 2147483647 : i64 loc(#loc66)
+    %c-2147483648_i64_3 = arith.constant -2147483648 : i64 loc(#loc66)
+    %10 = arith.cmpi sle, %9, %c2147483647_i64_2 : i64 loc(#loc66)
+    %11 = arith.cmpi sge, %9, %c-2147483648_i64_3 : i64 loc(#loc66)
+    %12 = arith.andi %10, %11 : i1 loc(#loc66)
+    %13 = arith.subi %6, %c1_i32_1 : i32 loc(#loc66)
+    %c64_i32_4 = arith.constant 64 : i32 loc(#loc67)
+    %c64_i32_5 = arith.constant 64 : i32 loc(#loc67)
+    %14 = arith.divsi %13, %c64_i32_5 : i32 loc(#loc67)
+    tt.return %14 : i32 loc(#loc68)
   ^bb1:  // no predecessors
-    %15 = ub.poison : i32 loc(#loc70)
-    tt.return %15 : i32 loc(#loc70)
-  } loc(#loc65)
+    %15 = ub.poison : i32 loc(#loc69)
+    tt.return %15 : i32 loc(#loc69)
+  } loc(#loc64)
 } loc(#loc)
 #loc1 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":18:26)
 #loc2 = loc("/workspace/Triton-blog-file/matmul/kernel/matmul-with-dot-bf16.py":19:26)
@@ -413,9 +409,8 @@
 #loc61 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":117:0)
 #loc62 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":126:31)
 #loc63 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":126:11)
-#loc64 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":126:4)
-#loc66 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:16)
-#loc67 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:22)
-#loc68 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:28)
-#loc69 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:11)
-#loc70 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:4)
+#loc65 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:16)
+#loc66 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:22)
+#loc67 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:28)
+#loc68 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:11)
+#loc69 = loc("/workspace/Triton-blog-file/.venv/lib/python3.10/site-packages/triton/language/standard.py":40:4)
